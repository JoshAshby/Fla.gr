// Generated by CoffeeScript 1.5.0
(function() {

  $(function() {
    var base, label, labels, labelsCompiledTemplate, labelsTemplate, refreshLabels, _i, _len,
      _this = this;
    labels = [];
    labelsTemplate = " <span class=\"label label-info\">{{label}}</span> ";
    labelsCompiledTemplate = Handlebars.compile(labelsTemplate);
    /*
    The hidden label may have labels preloaded, so we need to make sure
    those labels get into the array and the div list
    */

    base = $("#labels").val();
    if (base !== "") {
      labels = $.secureEvalJSON(base);
      for (_i = 0, _len = labels.length; _i < _len; _i++) {
        label = labels[_i];
        $("#dynamicLabels").append(labelsCompiledTemplate({
          "label": label
        }));
      }
    }
    /*
    Refresh the labels array and adding anything in the
    input box to the span
    */

    refreshLabels = function() {
      var input, labels_input_break, labels_input_reduced, reduceSet, _j, _k, _len1, _len2;
      input = $("#labelInput").val();
      if (input !== "") {
        /*
        #So long as the input field ins't empty, strip all spaces from the
        #input then break it into an array, by commas followed by merging
        #it with the existing array of labels, then we reduce it, removing
        #duplicates and finally push it to the template and hidden input
        #field
        */

        labels_input_break = input.replace(/\s+/g, '');
        labels_input_break = labels_input_break.split(",");
        labels_input_break = labels_input_break.concat(labels);
        reduceSet = {};
        labels_input_reduced = [];
        for (_j = 0, _len1 = labels_input_break.length; _j < _len1; _j++) {
          label = labels_input_break[_j];
          reduceSet[label] = true;
        }
        for (label in reduceSet) {
          labels_input_reduced.push(label);
        }
        labels = labels_input_reduced;
        $("#dynamicLabels").html("");
        for (_k = 0, _len2 = labels.length; _k < _len2; _k++) {
          label = labels[_k];
          $("#dynamicLabels").append(labelsCompiledTemplate({
            "label": label
          }));
        }
        $("#labels").val($.toJSON(labels));
        return $("#labelInput").val("");
      }
    };
    /*
    When the add button is clicked then add the labels to the
    div list, the array and the hidden value, before finally
    clearing the field
    */

    $("#addLabels").click(function() {
      return refreshLabels();
    });
    /*
    Prevent the form from submitting if the enter key is pressed
    Instead, add the tags that are in the input
    */

    $("#labelInput").keypress(function(event) {
      if (event.which === 13) {
        event.preventDefault();
        return refreshLabels();
      }
    });
    /*
    Bind the click even to all labels
    When a click happens then remove that element
    from both the DOM and the array of labels and the hidden input
    */

    return $(document).on("click", "#dynamicLabels>span.label", function() {
      labels.splice(labels.indexOf($(this).text()), 1);
      $("#labels").val($.toJSON(labels));
      return $(this).remove();
    });
  });

}).call(this);
