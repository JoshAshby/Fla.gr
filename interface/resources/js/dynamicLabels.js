// Generated by CoffeeScript 1.5.0
(function() {

  $(function() {
    var base, label, labels, labelsCompiledTemplate, labelsTemplate, refreshLabels, _i, _len,
      _this = this;
    labels = [];
    labelsTemplate = " <span class=\"label\">{{label}}</span> ";
    labelsCompiledTemplate = Handlebars.compile(labelsTemplate);
    /*
    The hidden label may have labels preloaded, so we need to make sure
    those labels get into the array and the div list
    */

    base = $("#labels").val() || "";
    if (base !== "") {
      base = $("#labels").split(",");
      for (_i = 0, _len = base.length; _i < _len; _i++) {
        label = base[_i];
        labels.push(label);
        $("#dynamicLabels").append(labelsCompiledTemplate({
          "label": label
        }));
      }
    }
    /*
    Refresh the labels array and adding anything in the
    input box to the span
    */

    refreshLabels = function() {
      var input, labels_input_break, labels_string, _j, _k, _len1, _len2;
      input = $("#labelInput").val();
      if (input !== "") {
        labels_string = "";
        for (_j = 0, _len1 = labels.length; _j < _len1; _j++) {
          label = labels[_j];
          labels_string += label + ", ";
        }
        labels_input_break = input.replace(/\s+/g, '');
        labels_input_break = labels_input_break.split(",");
        for (_k = 0, _len2 = labels_input_break.length; _k < _len2; _k++) {
          label = labels_input_break[_k];
          labels.push(label);
          $("#dynamicLabels").append(labelsCompiledTemplate({
            "label": label
          }));
          labels_string += label + ",";
        }
        labels_string = labels_string.substring(0, labels_string.length - 2);
        $("#labels").val(labels_string);
        return $("#labelInput").val("");
      }
    };
    /*
    When the add button is clicked then add the labels to the
    div list, the array and the hidden value, before finally
    clearing the field
    */

    $("#addLabels").click(function() {
      return refreshLabels();
    });
    /*
    Prevent the form from submitting if the enter key is pressed
    Instead, add the tags that are in the input
    */

    $("#labelInput").keypress(function(event) {
      if (event.which === 13) {
        event.preventDefault();
        return refreshLabels();
      }
    });
    /*
    Bind the click even to all labels
    When a click happens then remove that element
    from both the DOM and the array of labels and the hidden input
    */

    return $(document).on("click", "#dynamicLabels>span.label", function() {
      var labels_string, _j, _len1;
      labels.splice(labels.indexOf($(this).text()), 1);
      labels_string = "";
      for (_j = 0, _len1 = labels.length; _j < _len1; _j++) {
        label = labels[_j];
        labels_string += label + ", ";
      }
      $("#labels").val(labels_string);
      return $(this).remove();
    });
  });

}).call(this);
