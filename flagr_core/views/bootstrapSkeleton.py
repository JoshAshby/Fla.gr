#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
try:
    import builtins as builtin
except ImportError:
    import __builtin__ as builtin
from os.path import getmtime, exists
import time
import types
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import *
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers

##################################################
## MODULE CONSTANTS
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.4.4'
__CHEETAH_versionTuple__ = (2, 4, 4, 'development', 0)
__CHEETAH_genTime__ = 1362331095.654654
__CHEETAH_genTimestamp__ = 'Sun Mar  3 10:18:15 2013'
__CHEETAH_src__ = 'interface/templates/bootstrapSkeleton.tmpl'
__CHEETAH_srcLastModified__ = 'Sat Mar  2 22:03:33 2013'
__CHEETAH_docstring__ = 'Autogenerated by Cheetah: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class bootstrapSkeleton(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        super(bootstrapSkeleton, self).__init__(*args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        resources = "/static"
        write(u'''<!DOCTYPE html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js"> <!--<![endif]-->
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
        <title>fla.gr - ''')
        _v = VFFSL(SL,"page",True) # u'$page' on line 10, col 25
        if _v is not None: write(_filter(_v, rawExpr=u'$page')) # from line 10, col 25.
        write(u'''</title>
        <meta name="description" content="#description">
        <meta name="viewport" content="width=device-width">

        <link rel="stylesheet" href="''')
        _v = VFFSL(SL,"resources",True) # u'$resources' on line 14, col 38
        if _v is not None: write(_filter(_v, rawExpr=u'$resources')) # from line 14, col 38.
        write(u'''/css/bootstrap/bootstrap.min.css">
        <style>
            body {
                padding-top: 60px;
                padding-bottom: 40px;
            }
        </style>
        <link rel="stylesheet" href="''')
        _v = VFFSL(SL,"resources",True) # u'$resources' on line 21, col 38
        if _v is not None: write(_filter(_v, rawExpr=u'$resources')) # from line 21, col 38.
        write(u'''/css/bootstrap/bootstrap-responsive.min.css">
        <link rel="stylesheet" href="''')
        _v = VFFSL(SL,"resources",True) # u'$resources' on line 22, col 38
        if _v is not None: write(_filter(_v, rawExpr=u'$resources')) # from line 22, col 38.
        write(u'''/css/fontawesome/fontawesome.min.css">
        <!--[if IE 7]>
        <link rel="stylesheet" href="assets/css/font-awesome-ie7.min.css">
        <![endif]-->

''')
        if VFFSL(SL,"getVar",False)('stylesheets', ''): # generated from line 27, col 9
            for stylesheets in VFFSL(SL,"stylesheets",True): # generated from line 28, col 13
                write(u'''                <script src="''')
                _v = VFFSL(SL,"resources",True) # u'$resources' on line 29, col 30
                if _v is not None: write(_filter(_v, rawExpr=u'$resources')) # from line 29, col 30.
                write(u'''/css/''')
                _v = VFFSL(SL,"stylesheets.css",True) # u'$stylesheets.css' on line 29, col 45
                if _v is not None: write(_filter(_v, rawExpr=u'$stylesheets.css')) # from line 29, col 45.
                write(u'''"></script>
''')
        write(u'''
        <script src="''')
        _v = VFFSL(SL,"resources",True) # u'$resources' on line 33, col 22
        if _v is not None: write(_filter(_v, rawExpr=u'$resources')) # from line 33, col 22.
        write(u'''/js/modernizr-2.6.2-respond-1.1.0.min.js"></script>
    </head>
    <body>
        <!--[if lt IE 7]>
            <p class="chromeframe">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> or <a href="http://www.google.com/chromeframe/?redirect=true">activate Google Chrome Frame</a> to improve your experience.</p>
        <![endif]-->

        <!-- Begin nav bar template -->
        <div class="navbar navbar navbar-fixed-top">
            <div class="navbar-inner">
                <div class="container">
                    <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </a>
                    <a class="brand" href="/"><i class="icon-flag"></i> fla.gr</a>
                    <div class="nav-collapse collapse">
                        <ul class="nav">
''')
        if VFFSL(SL,"user.loggedIn",True): # generated from line 52, col 29
            write(u'''                                <li ''')
            if VFFSL(SL,"page",True) in ('labels', 'settings', 'flags', 'dashboard'): # generated from line 53, col 37
                write(u'''class="active"''')
            write(u'''><a href="/user/dashboard"><i class="icon-dashboard"></i></a></li>
''')
        else: # generated from line 54, col 29
            write(u'''                                <li ''')
            if VFFSL(SL,"page",True)=='home': # generated from line 55, col 37
                write(u'''class="active"''')
            write(u'''><a href="/"><i class="icon-home"></i></a></li>
''')
        write(u'''                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle ''')
        if VFFSL(SL,"page",True)=='search': # generated from line 58, col 68
            write(u'''active''')
        write(u'''" data-toggle="dropdown"><i class="icon-search"></i></a>
                                <ul class="dropdown-menu">
                                    <form style="padding-left: 20px; padding-right: 20px; padding-top:20px" action="#searchAddress">
                                        <fieldset>
                                            <div class="input-append">
                                                <input class="span3" type="text" placeholder="Search flags">
                                                <button type="submit" class="btn"><i class="icon-search"></i></button>
                                            </div>
                                        </fieldset>
                                    </form>
                                </ul>
                            </li>
                        </ul>
                        <ul class="nav pull-right">
                            <li class="dropdown">
''')
        if not VFFSL(SL,"user.loggedIn",True) and VFFSL(SL,"page",True)!='login': # generated from line 73, col 33
            write(u'''                                    <a href="#" class="dropdown-toggle" data-toggle="dropdown">Ohia, Stranger! <i class="icon-chevron-down"></i></a>
                                    <ul class="dropdown-menu">
                                        <form style="padding-left: 20px; padding-right: 20px" action="/auth/login" method="POST">
                                            <fieldset>
                                                <input class="span3" type="text" placeholder="Email" name="username">
                                                <input class="span3" type="password" placeholder="Password" name="password">
                                                <button type="submit" class="btn btn-primary"><i class="icon-signin"></i> Log in</button>
                                            </fieldset>
                                        </form>
                                        <li class="nav-header">Or...</li>
                                        <li><a href="/request">Request an invite</a></li>
                                    </ul>
''')
        elif VFFSL(SL,"user.loggedIn",True): # generated from line 86, col 33
            write(u'''                                    <a href="#" class="dropdown-toggle" data-toggle="dropdown">Heya, ''')
            _v = VFFSL(SL,"user.username",True) # u'$user.username' on line 87, col 102
            if _v is not None: write(_filter(_v, rawExpr=u'$user.username')) # from line 87, col 102.
            write(u''' <i class="icon-chevron-down"></i></a>
                                    <ul class="dropdown-menu">
                                        <li><a href="#newFlag"><i class="icon-flag"></i> Create a flag</a></li>
                                        <li class="nav-header">Or...</li>
                                        <li><a href="#settings"><i class="icon-cogs"></i> Account Settings</a></li>
                                        <li><a href="#logout"><i class="icon-signout"></i> Log out</a></li>
                                    </ul>
''')
        write(u'''                            </li>
                        </ul>
                    </div><!--/.nav-collapse -->
                </div>
            </div>
        </div>
        <!-- End nav bar template -->

        <div class="container">
            <div class="row">
                <div class="span10 offset1">
                <!-- If there is an alert, display it, if not, don\'t put
                anything else above the content -->
''')
        if VFN(VFFSL(SL,"user",True),"getAlerts",False)(): # generated from line 108, col 21
            write(u'''                        ''')
            _v = VFN(VFFSL(SL,"user",True),"getAlerts",False)() # u'$user.getAlerts()' on line 109, col 25
            if _v is not None: write(_filter(_v, rawExpr=u'$user.getAlerts()')) # from line 109, col 25.
            write(u'''
''')
        write(u'''                </div>
''')
        if VFFSL(SL,"page",True) in ('labels', 'settings', 'flags'): # generated from line 112, col 17
            write(u'''                    <!-- Start tabs and page header -->
                    <div class="row">
                        <div class="offset1 span5">
                            <h3><i class="icon-dashboard"></i> Dashboard <small><b>Your ''')
            _v = VFFSL(SL,"page",True) # u'$page' on line 116, col 89
            if _v is not None: write(_filter(_v, rawExpr=u'$page')) # from line 116, col 89.
            write(u'''</b></small></h3>
                        </div>
                        <div class="span5 tabs-below">
                            <ul class="nav nav-tabs">
                                <li ''')
            if VFFSL(SL,"page",True)=="flags": # generated from line 120, col 37
                write(u''' class="active"''')
            write(u'''><a href="#flags"><i class="icon-flag"></i></a></li>
                                <li ''')
            if VFFSL(SL,"page",True)=="labels": # generated from line 121, col 37
                write(u''' class="active"''')
            write(u'''><a href="#labels"><i class="icon-tags"></i></a></li>
                                <li ''')
            if VFFSL(SL,"page",True)=="settings": # generated from line 122, col 37
                write(u''' class="active"''')
            write(u'''><a href="#settings"><i class="icon-cogs"></i></a></li>
                                <a style="margin-top: 5px" href="#newFlag" class="btn btn-info pull-right"><i class="icon-flag"></i> New flag</a>
                            </ul>
                        </div>
                    </div>
                    <!-- End tabs and page header -->
''')
        write(u'''                <div class="row">
                    <div class="offset1 span10">
                        ''')
        _v = VFFSL(SL,"body",True) # u'$body' on line 131, col 25
        if _v is not None: write(_filter(_v, rawExpr=u'$body')) # from line 131, col 25.
        write(u'''
                    </div>
                    ''')
        _v = VFFSL(SL,"getVar",False)('rightExtra', '') # u"$getVar('rightExtra', '')" on line 133, col 21
        if _v is not None: write(_filter(_v, rawExpr=u"$getVar('rightExtra', '')")) # from line 133, col 21.
        write(u'''
                </div>
            </div>

            <hr>

            <footer>
            <small>
                A project by <a href="http://transientBug.com"><i class="icon-beaker"></i> transientBug</a>
                &copy 2013 <a href="http://github.com/transientBug"><i class="icon-github"></i></a>
                <a href="http://twitter.com/transientBug"><i class="icon-twitter"></i></a>
            </small>
            </footer>

        </div> <!-- /container -->

        <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
        <script>window.jQuery || document.write(\'<script src="''')
        _v = VFFSL(SL,"resources",True) # u'$resources' on line 150, col 63
        if _v is not None: write(_filter(_v, rawExpr=u'$resources')) # from line 150, col 63.
        write(u'''/js/jquery-1.9.1.min.js"><\\/script>\')</script>

        <script src="''')
        _v = VFFSL(SL,"resources",True) # u'$resources' on line 152, col 22
        if _v is not None: write(_filter(_v, rawExpr=u'$resources')) # from line 152, col 22.
        write(u'''/js/bootstrap.min.js"></script>

''')
        if VFFSL(SL,"getVar",False)('scripts', ''): # generated from line 154, col 9
            for script in VFFSL(SL,"scripts",True): # generated from line 155, col 13
                write(u'''                <script src="''')
                _v = VFFSL(SL,"resources",True) # u'$resources' on line 156, col 30
                if _v is not None: write(_filter(_v, rawExpr=u'$resources')) # from line 156, col 30.
                write(u'''/js/''')
                _v = VFFSL(SL,"script.js",True) # u'$script.js' on line 156, col 44
                if _v is not None: write(_filter(_v, rawExpr=u'$script.js')) # from line 156, col 44.
                write(u'''"></script>
''')
        write(u"""
        <!-- <script>
            var _gaq=[['_setAccount','UA-XXXXX-X'],['_trackPageview']];
            (function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];
            g.src=('https:'==location.protocol?'//ssl':'//www')+'.google-analytics.com/ga.js';
            s.parentNode.insertBefore(g,s)}(document,'script'));
        </script> -->
    </body>
</html>
""")
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_bootstrapSkeleton= 'respond'

## END CLASS DEFINITION

if not hasattr(bootstrapSkeleton, '_initCheetahAttributes'):
    templateAPIClass = getattr(bootstrapSkeleton, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(bootstrapSkeleton)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=bootstrapSkeleton()).run()


